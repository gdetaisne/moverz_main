#!/bin/bash

# Script de validation des d√©ploiements
# Usage: ./validate-deployment.sh <site> <url>

if [ $# -ne 2 ]; then
  echo "Usage: ./validate-deployment.sh <site> <url>"
  echo "Exemple: ./validate-deployment.sh strasbourg https://devis-demenageur-strasbourg.fr"
  exit 1
fi

SITE=$1
URL=$2

echo "üîç VALIDATION DU D√âPLOIEMENT: $SITE"
echo "================================"
echo ""

# V√©rifier que le captain-definition n'existe pas √† la racine (pollution)
if [ -f "captain-definition" ]; then
  echo "‚ùå ERREUR: captain-definition trouv√© √† la racine (pollution d√©tect√©e)"
  echo "   Contenu:"
  cat captain-definition
  exit 1
fi

echo "‚úÖ Pas de pollution captain-definition √† la racine"

# V√©rifier la page d'accueil
echo "üåê Test de la page d'accueil..."
if curl -s -o /dev/null -w "%{http_code}" "$URL" | grep -q "200"; then
  echo "‚úÖ Page d'accueil accessible (200)"
else
  echo "‚ùå Page d'accueil inaccessible"
  exit 1
fi

# V√©rifier que le contenu correspond au bon site
echo "üîç V√©rification du contenu..."
CONTENT_CHECK=$(curl -s "$URL" | grep -i "$SITE" | head -1)
if [ -n "$CONTENT_CHECK" ]; then
  echo "‚úÖ Contenu correspondant au site $SITE trouv√©"
else
  echo "‚ùå Contenu ne correspond pas au site $SITE"
  echo "   Recherch√©: $SITE"
  echo "   Contenu trouv√©: $(curl -s "$URL" | grep -i "demenageur" | head -1)"
  exit 1
fi

# V√©rifier le blog
echo "üìö Test de la page blog..."
BLOG_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$URL/blog")
if [ "$BLOG_STATUS" = "200" ]; then
  echo "‚úÖ Page blog accessible (200)"
else
  echo "‚ùå Page blog inaccessible ($BLOG_STATUS)"
  echo "   Ceci peut indiquer des erreurs Server Components"
  exit 1
fi

echo ""
echo "üéâ VALIDATION R√âUSSIE !"
echo "   Site: $SITE"
echo "   URL: $URL"
echo "   Tous les tests sont pass√©s"
